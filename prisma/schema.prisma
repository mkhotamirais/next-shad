// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  lastLogin     DateTime? @default(now())
  password      String?
  emailVerified DateTime? @map("email_verified")
  role          UserRole  @default(USER)
  provider      String?   @default("credentials")
  image         String?
  accounts      Account[]

  @@map("users")
}

model Article {
  id        String   @id @default(cuid())
  title     String   @unique
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        String   @id @default(cuid())
  name      String   @unique
  price     Float
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Gallery {
  id        String   @id @default(cuid())
  name      String   @unique
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
